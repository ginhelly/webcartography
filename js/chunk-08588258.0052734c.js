(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-08588258"],{"00a2":function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t("feb7");function o(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function i(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function a(e){if(e.length>1&&n.isNumber(e[0])&&n.isNumber(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return a(e[0]);throw new Error("coordinates must only contain numbers")}function u(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}function s(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function c(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0,o=e.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!i.geometry||i.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+i.geometry.type)}}function l(e){return"Feature"===e.type?e.geometry:e}function f(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}r.getCoord=o,r.getCoords=i,r.containsNumber=a,r.geojsonType=u,r.featureOf=s,r.collectionOf=c,r.getGeom=l,r.getType=f},"13d5":function(e,r,t){"use strict";var n=t("23e7"),o=t("d58f").left,i=t("a640"),a=t("ae40"),u=t("2d00"),s=t("605d"),c=i("reduce"),l=a("reduce",{1:0}),f=!s&&u>79&&u<83;n({target:"Array",proto:!0,forced:!c||!l||f},{reduce:function(e){return o(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"409f":function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t("716c");function o(e){var r=[1/0,1/0,-1/0,-1/0];return n.coordEach(e,(function(e){r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])})),r}r.default=o},4596:function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t("00a2");function o(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("point is required");if(!r)throw new Error("polygon is required");var o=n.getCoord(e),u=n.getGeom(r),s=u.type,c=r.bbox,l=u.coordinates;if(c&&!1===a(o,c))return!1;"Polygon"===s&&(l=[l]);for(var f=!1,d=0;d<l.length&&!f;d++)if(i(o,l[d][0],t.ignoreBoundary)){var h=!1,g=1;while(g<l[d].length&&!h)i(o,l[d][g],!t.ignoreBoundary)&&(h=!0),g++;h||(f=!0)}return f}function i(e,r,t){var n=!1;r[0][0]===r[r.length-1][0]&&r[0][1]===r[r.length-1][1]&&(r=r.slice(0,r.length-1));for(var o=0,i=r.length-1;o<r.length;i=o++){var a=r[o][0],u=r[o][1],s=r[i][0],c=r[i][1],l=e[1]*(a-s)+u*(s-e[0])+c*(e[0]-a)===0&&(a-e[0])*(s-e[0])<=0&&(u-e[1])*(c-e[1])<=0;if(l)return!t;var f=u>e[1]!==c>e[1]&&e[0]<(s-a)*(e[1]-u)/(c-u)+a;f&&(n=!n)}return n}function a(e,r){return r[0]<=e[0]&&r[1]<=e[1]&&r[2]>=e[0]&&r[3]>=e[1]}r.default=o},"5cf5":function(e,r,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0});var o=n(t("409f")),i=n(t("4596")),a=n(t("9574")),u=t("00a2");function s(e,r){var t=u.getGeom(e),n=u.getGeom(r),o=u.getType(e),s=u.getType(r),m=u.getCoords(e),v=u.getCoords(r);switch(o){case"Point":switch(s){case"Point":return y(m,v);default:throw new Error("feature2 "+s+" geometry not supported")}case"MultiPoint":switch(s){case"Point":return c(t,n);case"MultiPoint":return l(t,n);default:throw new Error("feature2 "+s+" geometry not supported")}case"LineString":switch(s){case"Point":return a.default(n,t,{ignoreEndVertices:!0});case"LineString":return h(t,n);case"MultiPoint":return f(t,n);default:throw new Error("feature2 "+s+" geometry not supported")}case"Polygon":switch(s){case"Point":return i.default(n,t,{ignoreBoundary:!0});case"LineString":return g(t,n);case"Polygon":return p(t,n);case"MultiPoint":return d(t,n);default:throw new Error("feature2 "+s+" geometry not supported")}default:throw new Error("feature1 "+o+" geometry not supported")}}function c(e,r){var t,n=!1;for(t=0;t<e.coordinates.length;t++)if(y(e.coordinates[t],r.coordinates)){n=!0;break}return n}function l(e,r){for(var t=0,n=r.coordinates;t<n.length;t++){for(var o=n[t],i=!1,a=0,u=e.coordinates;a<u.length;a++){var s=u[a];if(y(o,s)){i=!0;break}}if(!i)return!1}return!0}function f(e,r){for(var t=!1,n=0,o=r.coordinates;n<o.length;n++){var i=o[n];if(a.default(i,e,{ignoreEndVertices:!0})&&(t=!0),!a.default(i,e))return!1}return!!t}function d(e,r){for(var t=0,n=r.coordinates;t<n.length;t++){var o=n[t];if(!i.default(o,e,{ignoreBoundary:!0}))return!1}return!0}function h(e,r){for(var t=!1,n=0,o=r.coordinates;n<o.length;n++){var i=o[n];if(a.default({type:"Point",coordinates:i},e,{ignoreEndVertices:!0})&&(t=!0),!a.default({type:"Point",coordinates:i},e,{ignoreEndVertices:!1}))return!1}return t}function g(e,r){var t=!1,n=0,a=o.default(e),u=o.default(r);if(!m(a,u))return!1;for(n;n<r.coordinates.length-1;n++){var s=v(r.coordinates[n],r.coordinates[n+1]);if(i.default({type:"Point",coordinates:s},e,{ignoreBoundary:!0})){t=!0;break}}return t}function p(e,r){if("Feature"===e.type&&null===e.geometry)return!1;if("Feature"===r.type&&null===r.geometry)return!1;var t=o.default(e),n=o.default(r);if(!m(t,n))return!1;for(var a=u.getGeom(r).coordinates,s=0,c=a;s<c.length;s++)for(var l=c[s],f=0,d=l;f<d.length;f++){var h=d[f];if(!i.default(h,e))return!1}return!0}function m(e,r){return!(e[0]>r[0])&&(!(e[2]<r[2])&&(!(e[1]>r[1])&&!(e[3]<r[3])))}function y(e,r){return e[0]===r[0]&&e[1]===r[1]}function v(e,r){return[(e[0]+r[0])/2,(e[1]+r[1])/2]}r.default=s,r.isPointInMultiPoint=c,r.isMultiPointInMultiPoint=l,r.isMultiPointOnLine=f,r.isMultiPointInPoly=d,r.isLineOnLine=h,r.isLineInPoly=g,r.isPolyInPoly=p,r.doBBoxOverlap=m,r.compareCoords=y,r.getMidpoint=v},"716c":function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t("feb7");function o(e,r,t){if(null!==e)for(var n,i,a,u,s,c,l,f,d=0,h=0,g=e.type,p="FeatureCollection"===g,m="Feature"===g,y=p?e.features.length:1,v=0;v<y;v++){l=p?e.features[v].geometry:m?e.geometry:e,f=!!l&&"GeometryCollection"===l.type,s=f?l.geometries.length:1;for(var w=0;w<s;w++){var b=0,P=0;if(u=f?l.geometries[w]:l,null!==u){c=u.coordinates;var E=u.type;switch(d=!t||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===r(c,h,v,b,P))return!1;h++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<c.length;n++){if(!1===r(c[n],h,v,b,P))return!1;h++,"MultiPoint"===E&&b++}"LineString"===E&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<c.length;n++){for(i=0;i<c[n].length-d;i++){if(!1===r(c[n][i],h,v,b,P))return!1;h++}"MultiLineString"===E&&b++,"Polygon"===E&&P++}"Polygon"===E&&b++;break;case"MultiPolygon":for(n=0;n<c.length;n++){for(P=0,i=0;i<c[n].length;i++){for(a=0;a<c[n][i].length-d;a++){if(!1===r(c[n][i][a],h,v,b,P))return!1;h++}P++}b++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===o(u.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,r,t,n){var i=t;return o(e,(function(e,n,o,a,u){i=0===n&&void 0===t?e:r(i,e,n,o,a,u)}),n),i}function a(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length;t++)if(!1===r(e.features[t].properties,t))break;break;case"Feature":r(e.properties,0);break}}function u(e,r,t){var n=t;return a(e,(function(e,o){n=0===o&&void 0===t?e:r(n,e,o)})),n}function s(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length;t++)if(!1===r(e.features[t],t))break}function c(e,r,t){var n=t;return s(e,(function(e,o){n=0===o&&void 0===t?e:r(n,e,o)})),n}function l(e){var r=[];return o(e,(function(e){r.push(e)})),r}function f(e,r){var t,n,o,i,a,u,s,c,l,f,d=0,h="FeatureCollection"===e.type,g="Feature"===e.type,p=h?e.features.length:1;for(t=0;t<p;t++){for(u=h?e.features[t].geometry:g?e.geometry:e,c=h?e.features[t].properties:g?e.properties:{},l=h?e.features[t].bbox:g?e.bbox:void 0,f=h?e.features[t].id:g?e.id:void 0,s=!!u&&"GeometryCollection"===u.type,a=s?u.geometries.length:1,o=0;o<a;o++)if(i=s?u.geometries[o]:u,null!==i)switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(i,d,c,l,f))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===r(i.geometries[n],d,c,l,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,d,c,l,f))return!1;d++}}function d(e,r,t){var n=t;return f(e,(function(e,o,i,a,u){n=0===o&&void 0===t?e:r(n,e,o,i,a,u)})),n}function h(e,r){f(e,(function(e,t,o,i,a){var u,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==r(n.feature(e,o,{bbox:i,id:a}),t,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon";break}for(var c=0;c<e.coordinates.length;c++){var l=e.coordinates[c],f={type:u,coordinates:l};if(!1===r(n.feature(f,o),t,c))return!1}}))}function g(e,r,t){var n=t;return h(e,(function(e,o,i){n=0===o&&0===i&&void 0===t?e:r(n,e,o,i)})),n}function p(e,r){h(e,(function(e,t,i){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var s,c=0,l=0,f=0;return!1!==o(e,(function(o,u,d,h,g){if(void 0===s||t>c||h>l||g>f)return s=o,c=t,l=h,f=g,void(a=0);var p=n.lineString([s,o],e.properties);if(!1===r(p,t,i,g,a))return!1;a++,s=o}))&&void 0}}}))}function m(e,r,t){var n=t,o=!1;return p(e,(function(e,i,a,u,s){n=!1===o&&void 0===t?e:r(n,e,i,a,u,s),o=!0})),n}function y(e,r){if(!e)throw new Error("geojson is required");h(e,(function(e,t,o){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===r(e,t,o,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===r(n.lineString(a[u],e.properties),t,o,u))return!1;break}}}))}function v(e,r,t){var n=t;return y(e,(function(e,o,i,a){n=0===o&&void 0===t?e:r(n,e,o,i,a)})),n}function w(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,o=r.featureIndex||0,i=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.segmentIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,t=e.features[o].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var c=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=c.length+u-1),n.lineString([c[u],c[u+1]],s,r);case"Polygon":return a<0&&(a=c.length+a),u<0&&(u=c[a].length+u-1),n.lineString([c[a][u],c[a][u+1]],s,r);case"MultiLineString":return i<0&&(i=c.length+i),u<0&&(u=c[i].length+u-1),n.lineString([c[i][u],c[i][u+1]],s,r);case"MultiPolygon":return i<0&&(i=c.length+i),a<0&&(a=c[i].length+a),u<0&&(u=c[i][a].length-u-1),n.lineString([c[i][a][u],c[i][a][u+1]],s,r)}throw new Error("geojson is invalid")}function b(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,o=r.featureIndex||0,i=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.coordIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,t=e.features[o].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var c=t.coordinates;switch(t.type){case"Point":return n.point(c,s,r);case"MultiPoint":return i<0&&(i=c.length+i),n.point(c[i],s,r);case"LineString":return u<0&&(u=c.length+u),n.point(c[u],s,r);case"Polygon":return a<0&&(a=c.length+a),u<0&&(u=c[a].length+u),n.point(c[a][u],s,r);case"MultiLineString":return i<0&&(i=c.length+i),u<0&&(u=c[i].length+u),n.point(c[i][u],s,r);case"MultiPolygon":return i<0&&(i=c.length+i),a<0&&(a=c[i].length+a),u<0&&(u=c[i][a].length-u),n.point(c[i][a][u],s,r)}throw new Error("geojson is invalid")}r.coordEach=o,r.coordReduce=i,r.propEach=a,r.propReduce=u,r.featureEach=s,r.featureReduce=c,r.coordAll=l,r.geomEach=f,r.geomReduce=d,r.flattenEach=h,r.flattenReduce=g,r.segmentEach=p,r.segmentReduce=m,r.lineEach=y,r.lineReduce=v,r.findSegment=w,r.findPoint=b},9574:function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t("00a2");function o(e,r,t){void 0===t&&(t={});for(var o=n.getCoord(e),a=n.getCoords(r),u=0;u<a.length-1;u++){var s=!1;if(t.ignoreEndVertices&&(0===u&&(s="start"),u===a.length-2&&(s="end"),0===u&&u+1===a.length-1&&(s="both")),i(a[u],a[u+1],o,s))return!0}return!1}function i(e,r,t,n){var o=t[0],i=t[1],a=e[0],u=e[1],s=r[0],c=r[1],l=t[0]-a,f=t[1]-u,d=s-a,h=c-u,g=l*h-f*d;return 0===g&&(n?"start"===n?Math.abs(d)>=Math.abs(h)?d>0?a<o&&o<=s:s<=o&&o<a:h>0?u<i&&i<=c:c<=i&&i<u:"end"===n?Math.abs(d)>=Math.abs(h)?d>0?a<=o&&o<s:s<o&&o<=a:h>0?u<=i&&i<c:c<i&&i<=u:"both"===n&&(Math.abs(d)>=Math.abs(h)?d>0?a<o&&o<s:s<o&&o<a:h>0?u<i&&i<c:c<i&&i<u):Math.abs(d)>=Math.abs(h)?d>0?a<=o&&o<=s:s<=o&&o<=a:h>0?u<=i&&i<=c:c<=i&&i<=u)}r.default=o},a46c:function(e,r,t){"use strict";t("c90a")},a640:function(e,r,t){"use strict";var n=t("d039");e.exports=function(e,r){var t=[][e];return!!t&&n((function(){t.call(null,r||function(){throw 1},1)}))}},c6c2:function(e,r,t){"use strict";t.r(r);var n=function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",[t("h3",[e._v("Школы г. Ижевска")]),t("div",{attrs:{id:"map"}}),t("v-row",[t("v-col",{attrs:{cols:"2"}}),t("v-col",{attrs:{cols:"8"}},[t("p",[e._v(" Данная карта показывает школы города по районам. При наведении на район появляется tooltip с названием района и количеством школ в нём. Это число рассчитывается исходя из географического размещения точки внутри или вне полигона района. Данные по школам взяты с OSM и могут быть неточными. Карта будет доделываться."),t("br"),e._v(" Вдохновлено "),t("a",{attrs:{href:"https://leafletjs.com/examples/choropleth/"}},[e._v("этой статьёй")]),e._v("."),t("br"),e._v(" Отличие от этого примера в том, что здесь число школ внутри районов Ижевска рассчитывается на лету при загрузке и обработке geoJSON-файла, т.е. в перспективе есть возможность здесь же, при определенных действиях пользователя перекрашивать заливку полигона (цвет заливки тоже рассчитывается на лету). Для проверки, находится ли школа внутри полигона, использовалась библиотека "),t("a",{attrs:{href:"https://turfjs.org/docs/#booleanContains"}},[e._v("Turf.js")])])]),t("v-col",{attrs:{cols:"2"}})],1)],1)},o=[],i=(t("d81d"),t("13d5"),t("fb6a"),t("b0c0"),t("d3b7"),t("25f0"),t("96cf"),t("1da1")),a=t("b85c"),u=t("e11e"),s=t.n(u),c=(t("6cc5"),t("8243"),t("3ac1"),t("7319"),t("5cf5")),l=t.n(c),f=function(){var e=Object(i["a"])(regeneratorRuntime.mark((function e(r){var t,n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,fetch(r);case 2:return t=e.sent,e.next=5,t.json();case 5:return n=e.sent,e.abrupt("return",n);case 7:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}();delete s.a.Icon.Default.prototype._getIconUrl,s.a.Icon.Default.mergeOptions({iconRetinaUrl:t("584d"),iconUrl:t("6397"),shadowUrl:t("e2b9")});var d={name:"Schools",data:function(){return{districts:null,schools:null,map:null,markers:null,maxSchools:0,minSchools:0}},methods:{initMap:function(){var e=[56.850671,53.204795],r=s.a.map("map").setView(e,11);s.a.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OSM</a> contributors'}).addTo(r),this.map=r},addTooltip:function(e,r){if(e.properties&&e.properties.cntSchools&&e.properties.name){var t=e.properties.name+", "+e.properties.cntSchools.toString();r.bindTooltip(t)}},rgbToHex:function(e,r,t){return"#"+((1<<24)+(e<<16)+(r<<8)+t).toString(16).slice(1)},getColorComponent:function(e,r,t){var n=(e-this.minSchools)/(this.maxSchools-this.minSchools),o=1-n,i=Math.round((r-t)*o);return t+i},getColor:function(e){var r=this.getColorComponent(e,239,117),t=this.getColorComponent(e,237,107),n=this.getColorComponent(e,245,177);return this.rgbToHex(r,t,n)},addDistricts:function(){var e=this,r=s.a.geoJSON(this.districts,{onEachFeature:e.addTooltip,style:function(r){return{fillColor:e.getColor(r.properties.cntSchools),weight:2,opacity:1,color:"white",dashArray:"3",fillOpacity:.7}}});r.addTo(this.map)},addSchools:function(){var e=s.a.markerClusterGroup(),r=s.a.geoJson(this.schools,{onEachFeature:function(e,r){r.bindPopup(e.properties.name)}});e.addLayer(r),this.map.addLayer(e),this.markers=e},countSchoolsInside:function(){var e,r=[],t=Object(a["a"])(this.districts.features);try{for(t.s();!(e=t.n()).done;){var n,o=e.value,i=0,u=Object(a["a"])(this.schools.features);try{for(u.s();!(n=u.n()).done;){var s=n.value;l()(o,s)&&(i+=1)}}catch(c){u.e(c)}finally{u.f()}o.properties.cntSchools=i,r.push(i)}}catch(c){t.e(c)}finally{t.f()}this.maxSchools=r.reduce((function(e,r){return r>e?r:e})),this.minSchools=r.reduce((function(e,r){return r<e?r:e}))}},mounted:function(){var e=this;return Object(i["a"])(regeneratorRuntime.mark((function r(){return regeneratorRuntime.wrap((function(r){while(1)switch(r.prev=r.next){case 0:return r.next=2,f("data/izhevsk_districts3.geojson");case 2:return e.districts=r.sent,r.next=5,f("data/izhevsk_schools3.geojson");case 5:e.schools=r.sent,e.countSchoolsInside(),e.initMap(),e.addDistricts(),e.addSchools();case 10:case"end":return r.stop()}}),r)})))()}},h=d,g=(t("a46c"),t("2877")),p=Object(g["a"])(h,n,o,!1,null,"6751b9a4",null);r["default"]=p.exports},c90a:function(e,r,t){},d58f:function(e,r,t){var n=t("1c0b"),o=t("7b0b"),i=t("44ad"),a=t("50c4"),u=function(e){return function(r,t,u,s){n(t);var c=o(r),l=i(c),f=a(c.length),d=e?f-1:0,h=e?-1:1;if(u<2)while(1){if(d in l){s=l[d],d+=h;break}if(d+=h,e?d<0:f<=d)throw TypeError("Reduce of empty array with no initial value")}for(;e?d>=0:f>d;d+=h)d in l&&(s=t(s,l[d],d,c));return s}};e.exports={left:u(!1),right:u(!0)}},d81d:function(e,r,t){"use strict";var n=t("23e7"),o=t("b727").map,i=t("1dde"),a=t("ae40"),u=i("map"),s=a("map");n({target:"Array",proto:!0,forced:!u||!s},{map:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},feb7:function(e,r,t){"use strict";function n(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function o(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return i(r).geometry;case"LineString":return c(r).geometry;case"Polygon":return u(r).geometry;case"MultiPoint":return h(r).geometry;case"MultiLineString":return d(r).geometry;case"MultiPolygon":return g(r).geometry;default:throw new Error(e+" is invalid")}}function i(e,r,t){void 0===t&&(t={});var o={type:"Point",coordinates:e};return n(o,r,t)}function a(e,r,t){return void 0===t&&(t={}),f(e.map((function(e){return i(e,r)})),t)}function u(e,r,t){void 0===t&&(t={});for(var o=0,i=e;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}var s={type:"Polygon",coordinates:e};return n(s,r,t)}function s(e,r,t){return void 0===t&&(t={}),f(e.map((function(e){return u(e,r)})),t)}function c(e,r,t){if(void 0===t&&(t={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");var o={type:"LineString",coordinates:e};return n(o,r,t)}function l(e,r,t){return void 0===t&&(t={}),f(e.map((function(e){return c(e,r)})),t)}function f(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function d(e,r,t){void 0===t&&(t={});var o={type:"MultiLineString",coordinates:e};return n(o,r,t)}function h(e,r,t){void 0===t&&(t={});var o={type:"MultiPoint",coordinates:e};return n(o,r,t)}function g(e,r,t){void 0===t&&(t={});var o={type:"MultiPolygon",coordinates:e};return n(o,r,t)}function p(e,r,t){void 0===t&&(t={});var o={type:"GeometryCollection",geometries:e};return n(o,r,t)}function m(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t}function y(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function v(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function w(e,r){return P(v(e,r))}function b(e){var r=e%360;return r<0&&(r+=360),r}function P(e){var r=e%(2*Math.PI);return 180*r/Math.PI}function E(e){var r=e%360;return r*Math.PI/180}function M(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return y(v(e,r),t)}function S(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=r.areaFactors[t];if(!o)throw new Error("invalid original units");var i=r.areaFactors[n];if(!i)throw new Error("invalid final units");return e/o*i}function k(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)&&!/^\s*$/.test(e)}function C(e){return!!e&&e.constructor===Object}function x(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!k(e))throw new Error("bbox must only contain numbers")}))}function F(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}function L(){throw new Error("method has been renamed to `radiansToDegrees`")}function R(){throw new Error("method has been renamed to `degreesToRadians`")}function O(){throw new Error("method has been renamed to `lengthToDegrees`")}function T(){throw new Error("method has been renamed to `lengthToRadians`")}function _(){throw new Error("method has been renamed to `radiansToLength`")}function j(){throw new Error("method has been renamed to `bearingToAzimuth`")}function A(){throw new Error("method has been renamed to `convertLength`")}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:r.earthRadius/1.0936},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1/1.0936},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=n,r.geometry=o,r.point=i,r.points=a,r.polygon=u,r.polygons=s,r.lineString=c,r.lineStrings=l,r.featureCollection=f,r.multiLineString=d,r.multiPoint=h,r.multiPolygon=g,r.geometryCollection=p,r.round=m,r.radiansToLength=y,r.lengthToRadians=v,r.lengthToDegrees=w,r.bearingToAzimuth=b,r.radiansToDegrees=P,r.degreesToRadians=E,r.convertLength=M,r.convertArea=S,r.isNumber=k,r.isObject=C,r.validateBBox=x,r.validateId=F,r.radians2degrees=L,r.degrees2radians=R,r.distanceToDegrees=O,r.distanceToRadians=T,r.radiansToDistance=_,r.bearingToAngle=j,r.convertDistance=A}}]);
//# sourceMappingURL=chunk-08588258.0052734c.js.map